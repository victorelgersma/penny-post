<form id="loginForm">
  <div>
    <label for="email">Email:</label>
    <br />
    <input type="email" name="email" placeholder="test@example.com" required />
  </div>
  <div>
    <label for="password">Password:</label>
    <br />
    <input type="password" name="password" placeholder="12345678" required />
  </div>
  <br />
  <button type="submit">Submit</button>
  <div id="errorMessage" style="color: red; display: none;"></div>
</form>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    console.log("DOM fully loaded and parsed");
    document
      .getElementById("loginForm")
      .addEventListener("submit", async function (event) {
        console.log("Form submit event triggered");
        event.preventDefault();

        const email = event.target.email.value;
        const password = event.target.password.value;
        const errorMessage = document.getElementById("errorMessage");

        try {
          console.log("Trying to log in with email:", email);
          const response = await fetch(
            "https://be-proud-thunder-3266.fly.dev/api/collections/users/auth-with-password",
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ identity: email, password: password }),
            }
          );

          if (!response.ok) {
            const errorData = await response.json();
            throw new Error(errorData.message || "Login failed");
          }

          const data = await response.json();
          console.log("Login successful:", data);
          // Handle successful login (e.g., redirect to another page, store token, etc.)
          errorMessage.style.display = "none";
          window.location.href = "/";
        } catch (error) {
          console.error("Error:", error);
          errorMessage.textContent = error.message;
          errorMessage.style.display = "block";
          // Handle login error (e.g., show error message to user)
        }
      });
  });
</script>

<style>
  /* Basic reset for margins and padding */
  body,
  form,
  div,
  label,
  input,
  button {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  /* Center the form on the page */
  form {
    max-width: 320px;
    margin: 50px auto;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 8px;
    background-color: var(--color-form);
  }

  /* Style for labels */
  label {
    display: block;
    margin-bottom: 8px;
    font-weight: bold;
    color: #333;
  }

  /* Style for input fields */
  input[type="email"],
  input[type="password"] {
    width: 100%;
    padding: 8px;
    margin-bottom: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 14px;
  }

  /* Style for the submit button */
  button[type="submit"] {
    width: 100%;
    padding: 10px;
    background-color: var(--color-form-button);
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 16px;
    cursor: pointer;
  }

  /* Hover effect for the submit button */
  button[type="submit"]:hover {
    background-color: #0056b3;
  }
</style>
